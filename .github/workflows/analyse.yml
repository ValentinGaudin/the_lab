name: "Static Analysis"

on: [ push ]

env:
  WORKING_DIR_API: "./platform/"

jobs:
  analyse_api:
    strategy:
      fail-fast: false
      matrix:
        php: [ "8.1", "8.2" ]
        laravel: [ "^10.0"]

    name: "P${{ matrix.php }} - L${{ matrix.laravel }}"

    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v3"

      - name: "Setup PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"
          extensions: "gd, intl, fileinfo"
          tools: "composer:v2"
          coverage: "none"

      - name: "Install composer.json"
        run: "composer install --working-dir=$WORKING_DIR_API --ignore-platform-reqs"

      - name: "Validate composer"
        run: "composer validate --strict --working-dir=$WORKING_DIR_API"

      - name: "Set application key"
        run: |
          cd platform/
          cp .env.example .env 
          php artisan key:generate

      - name: "Require Laravel Pint"
        run: "composer require laravel/pint --dev --no-update --no-interaction --no-progress --working-dir=$WORKING_DIR_API"

      - name: "Require Laravel Stan"
        run: "composer require larastan/larastan:^2.0 --dev --no-update --no-interaction --no-progress --working-dir=$WORKING_DIR_API"

      - name: "Require Laravel Pest"
        run: "composer require pestphp/pest --dev --with-all-dependencies --no-update --no-interaction --no-progress --working-dir=$WORKING_DIR_API"

      - name: "Require Laravel Pest dependency"
        run: "composer require pestphp/pest-plugin-laravel --dev --with-all-dependencies --no-update --no-interaction --no-progress --working-dir=$WORKING_DIR_API"

      - name: "Execute linter analysis"
        run: "composer run-script pint --working-dir=$WORKING_DIR_API"

      - name: "Execute static analysis"
        run: "composer run-script stan --working-dir=$WORKING_DIR_API"

      - name: "Execute pest analysis"
        run: "composer run-script pest --working-dir=$WORKING_DIR_API"

