services:
  platform:
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "netstat -an | grep :9000 || exit 1" ]
      interval: 6s
      timeout: 6s
      retries: 40
    environment:
      # LARAVEL SPECIFICS
      APP_NAME: ${APP_NAME}
      APP_ENV: ${ENV}
      APP_DEBUG: ${DEBUG}
      APP_URL: ${HTTP_PROTOCOL}://${DOMAIN}
      HTTP_PROTOCOL: ${HTTP_PROTOCOL}
      SANCTUM_STATEFUL_DOMAINS: ${SANCTUM_STATEFUL_DOMAINS}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      SESSION_DOMAIN: .${DOMAIN}
      # DATABASE
      DB_DATABASE: ${DATABASE_NAME}
      DB_USERNAME: ${DATABASE_USER}
      DB_PASSWORD: ${DATABASE_PASSWORD}
      DB_HOST: database
      # DATABASE QUEUE WORKER
      QUEUE_CONNECTION: database
      QUEUE_DB_DATABASE: ${QUEUE_DATABASE_NAME}
      QUEUE_DB_USERNAME: ${QUEUE_DATABASE_USER}
      QUEUE_DB_PASSWORD: ${QUEUE_DATABASE_PASSWORD}
      QUEUE_DB_HOST: queue_db
      # EMAILING
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_MAILER: ${MAIL_MAILER}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_ENCRYPTION: ${MAIL_ENCRYPTION}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME}
      MAIL_VERIFY_PEER: ${MAIL_VERIFY_PEER}

  platform_webserver:
    depends_on:
      platform:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.http.routers.platform_webserver.rule=Host(`${DOMAIN}`)

  platform_cron:
    extends: platform
    healthcheck:
      disable: true
    depends_on:
      platform:
        condition: service_healthy

  platform_queue_worker:
    extends: platform
    healthcheck:
      disable: true
    # Le restart always est recommandé afin de redémarrer automatiquement le container après l'exécution de la commande queue:restart.
    #restart: always
    depends_on:
      platform:
        condition: service_healthy
      queue_db:
        condition: service_healthy
